---------
 Windows
---------
- ensure visual studio (2017 or 2019) is installed with C++ language support
- run setup_win.bat
- open .sln file in build/win folder

Note: if you have two visual studio versions and prefer to use one, use setup_win_vs2017.bat or setup_win_vs2019.bat

Troubleshoot:
- Compilation doesn't handle well paths with spaces, please make sure to unzip on a path without any spaces in the name.
- If you get this error when opening the .sln: "Error HRESULT E_FAIL has been returned from a call to a COM component"
  delete build/win/.vs directory and try reopening the .sln again
- If you get:
  "- cl

     is not a full path and was not found in the PATH.

     To use the NMake generator with Visual C++, cmake must be run from a shell
     that can use the compiler cl from the command line.
  "
  Try running setup_win_vs2017.bat or setup_win_vs2019.bat instead of setup_win.bat.
  If the problem persists, reinstall Visual Studio and make sure "Desktop Development with C++" is set


-----
 Mac
-----
- ensure xcode is installed
- open terminal and execute:
  - $ chmod +x setup_mac.sh
  - $ ./setup_mac.sh
- open .xcodeproj in build/mac folder

Troubleshoot:
- Compilation doesn't handle well paths with spaces, please make sure to unzip on a path without any spaces in the name.
- If you get this error: "xcode-select: error: tool 'xcodebuild' requires Xcode,
  but active developer directory '/Library/Developer/CommandLineTools' is a command line tools instance".
  Try the following:
  - sudo xcode-select -s /Applications/Xcode.app/Contents/Developer  


-------
 Linux
-------
- ensure a C++ compiler is installed (clang / gcc)
- open terminal and execute:
  - $ chmod +x setup_linux.sh
  - $ ./setup_linux.sh
- build the project by using:
  - $ cd build/linux
  - $ make

if you want to use an IDE instead raw makefiles, delete the build/linux folder and change all "Unix Makefiles" in build_linux.sh to your preferred generator.
For example: "CodeBlocks - Unix Makefiles"

Troubleshoot:
- Compilation doesn't handle well paths with spaces, please make sure to unzip on a path without any spaces in the name.
- If you get an error message like: ERROR: Missing Xext.h, maybe you need to install the libxext-dev, try installing the package.
  In case the package is already installed, try replacing the line 409 in cmake/sdlchecks.cmake:
    check_include_files("X11/Xlib.h;X11/Xproto.h;X11/extensions/Xext.h" HAVE_XEXT_H)
  with:
    set(HAVE_XEXT_H 1)
    

--------
 Notes
--------

During the setup, you may see messages like:
-- Performing Test HAVE_BLABLABLA - Failed

These are not errors, they are just CMake checks for several libraries availability.
